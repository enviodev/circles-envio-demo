# yaml-language-server: $schema=./node_modules/envio/evm.schema.json
name: envio-indexer
networks:
- id: 100 # gnosis
  start_block: 0 # can leave as 0, only needed for rpc as a source
  contracts:
  - name: Hub
    address:
    - 0x29b9a7fBb8995b2423a71cC17cf9810798F6C543
    handler: src/EventHandlers.ts
    events:
    - event: HubTransfer(address indexed from, address indexed to, uint256 amount)
    - event: OrganizationSignup(address indexed organization)
    - event: Signup(address indexed user, address token)
    - event: Trust(address indexed canSendTo, address indexed user, uint256 limit)
  - name: PersonalCRC    # dymanic contract, no address required
    handler: src/EventHandlers.ts
    events:
    - event: Approval(address indexed owner, address indexed spender, uint256 value)
    - event: Transfer(address indexed from, address indexed to, uint256 value)
  - name: HubV2
    address:
    - 0xc12C1E50ABB450d6205Ea2C3Fa861b3B834d13e8
    handler: src/EventHandlers.ts
    events:
    - event: ApprovalForAll(address indexed account, address indexed operator, bool approved)
    - event: DiscountCost(address indexed account, uint256 indexed id, uint256 discountCost)
    - event: FlowEdgesScopeLastEnded()
    - event: FlowEdgesScopeSingleStarted(uint256 indexed flowEdgeId, uint16 streamId)
    - event: GroupMint(address indexed sender, address indexed receiver, address indexed group, uint256[] collateral, uint256[] amounts)
    - event: PersonalMint(address indexed human, uint256 amount, uint256 startPeriod, uint256 endPeriod)
    - event: RegisterGroup(address indexed group, address indexed mint, address indexed treasury, string name, string symbol)
    - event: RegisterHuman(address indexed avatar, address indexed inviter)
    - event: RegisterOrganization(address indexed organization, string name)
    - event: SetAdvancedUsageFlag(address indexed avatar, bytes32 flag)
    - event: Stopped(address indexed avatar)
    - event: StreamCompleted(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] amounts)
    - event: TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)
    - event: TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)
    - event: Trust(address indexed truster, address indexed trustee, uint256 expiryTime)
    - event: URI(string value, uint256 indexed id)
  - name: StandardTreasury
    address:
      - 0x08F90aB73A515308f03A718257ff9887ED330C6e  
    handler: src/EventHandlers.ts    
    events:
    - event: CreateVault(address indexed group, address indexed vault)
    - event: CollateralLockedSingle(address indexed group, uint256 indexed id, uint256 value, bytes userData)
    - event: CollateralLockedBatch(address indexed group, uint256[] ids, uint256[] values, bytes userData)
    - event: GroupRedeem(address indexed group, uint256 indexed id, uint256 value, bytes data)
    - event: GroupRedeemCollateralReturn(address indexed group, address indexed to, uint256[] ids, uint256[] values)
    - event: GroupRedeemCollateralBurn(address indexed group, uint256[] ids, uint256[] values) 
  - name: NameRegistry
    address: 
    - 0xA27566fD89162cC3D40Cb59c87AAaA49B85F3474
    handler: src/EventHandlers.ts
    events:
      - event: UpdateMetadataDigest(address indexed avatar, bytes32 metadataDigest)
      - event: RegisterShortName(address indexed avatar, uint72 shortName, uint256 nonce)
  - name: ERC20Lift
    address:
      - 0x5F99a795dD2743C36D63511f0D4bc667e6d3cDB5    
    handler: src/EventHandlers.ts
    events:
    - event: ProxyCreation(address proxy, address masterCopy)
    - event: ERC20WrapperDeployed(address indexed avatar, address indexed erc20Wrapper, uint8 circlesType)
  - name: CirclesBacking
    address:
      - 0x4bB5A425a68ed73Cf0B26ce79F5EEad9103C30fc
    handler: src/EventHandlers.ts
    events:
      - event: CirclesBackingInitiated(address indexed backer, address indexed circlesBackingInstance, address backingAsset, address personalCirclesAddress)
      - event: CirclesBackingCompleted(address indexed backer, address indexed circlesBackingInstance, address indexed lbp)
  - name: WrappedERC20 # dymanic contract, no address required
    handler: src/EventHandlers.ts
    events:
      - event: Transfer(address indexed from, address indexed to, uint256 value)
      - event: DepositDemurraged(address indexed account, uint256 amount, uint256 inflationaryAmount)
      - event: WithdrawDemurraged(address indexed account, uint256 amount, uint256 inflationaryAmount)
      - event: DepositInflationary(address indexed account, uint256 amount, uint256 demurragedAmount)
      - event: WithdrawInflationary(address indexed account, uint256 amount, uint256 demurragedAmount)
  - name: SafeAccount # dymanic contract, no address required
    handler: src/EventHandlers.ts
    events:
      - event: ExecutionSuccess(bytes32 txHash, uint256 payment)
rollback_on_reorg: true
raw_events: true # this has slight storage & write overhead, in the context of this indexer it makes sence to have on :)
